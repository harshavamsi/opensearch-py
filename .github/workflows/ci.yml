---
name: CI

on: [push, pull_request]

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install nox
      - name: Lint the code
        run: nox -s lint

  test-build-distribution:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install build tools
        run: |
          python -m pip install --upgrade build
      - name: Build project for distribution
        run: |
          python -m build

  test-unit:
    strategy:
      fail-fast: false
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9, '3.10']
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    name: test-${{ matrix.python-version }}-${{matrix.os}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1
      - name: Set Up Python - ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install -r dev-requirements.txt
      - name: Run Tests
        run: |
          python setup.py test

  twine-check:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine
      - name: Build source distribution
        run: python setup.py sdist bdist_wheel
      - name: Check with Twine
        working-directory: dist
        run: twine check *
